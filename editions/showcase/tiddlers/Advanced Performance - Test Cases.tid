created: 20221025202205570
modified: 20230404172805016
title: Advanced Performance - Test Cases
type: text/vnd.tiddlywiki

\define subfilter1() [range[1000]] :map[all[shadows]search:*[wiki]] :and[first[]]
\define subfilter2() [reverse[]subfilter<subfilter1>]
\define subfilter3() [uppercase[]subfilter<subfilter2>]
\define subfilter4() [lowercase[]subfilter<subfilter3>]
\define subfilter5() [sort[]subfilter<subfilter4>]

\define actions-subfilter-test()
<$action-setfield $tiddler="$:/temp/test" $value={{{ [[NewTiddler]subfilter<subfilter5>] }}} />
\end

<$let
  tid=<<currentTiddler>>
  test="test"
  test-count="20"
>

This tiddler contains a few test filters used in development. Each filter below runs <<test-count>> times.

!! Variables

Test that variables in filters are not accidentally treated as HTML in the logs:

```
[all[tiddlers]search<test>]
```

Runs: <code><$list filter="[range[1],<test-count>]" variable="ignore"><$list filter="[all[tiddlers]search<test>]">.</$list></$list></code>

!! Backlinks

Just so we have backlinks filter somewhere in logs:

```
[all[current]backlinks[]]
```

Runs: <code><$list filter="[range[1],<test-count>]" variable="ignore"><$list filter="[all[current]backlinks[]]">.</$list></$list></code>

!! Slow filter

A filter that does a lot of things and should take a bit longer than other filters on this TiddlyWiki:

```
[all[tiddlers+shadows]] :map[range[1],[100]] +[count[]]
```

Runs: <code><$list filter="[range[1],<test-count>]" variable="ignore"><$list filter="[all[tiddlers+shadows]] :map[range[1],[100]] +[count[]]">.</$list></$list></code>
</$let>

!! Subfilters

^^(Test case provided by [[Yaisog Bonegnasher|https://github.com/yaisog]])^^

A filter that runs multiple nested subfilters, intended to validate that:

 * Subfilters are displayed differently in the logs
 * `other` refresh does not incorrectly double count the subfilters' duration

<$button actions=<<actions-subfilter-test>>>Click</$button> -- Warning, can take a few seconds to finish!