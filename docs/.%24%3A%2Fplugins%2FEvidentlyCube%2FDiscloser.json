{"title":"$:/plugins/EvidentlyCube/Discloser","version":"0.0.1","core-version":">=5.2.3","description":"A plugin for easier management of publicly accessible tiddlers.","author":"Maurycy Zarzycki","source":"https://github.com/EvidentlyCube/TW5-Discloser","plugin-type":"plugin","list":"readme license history","dependents":"","type":"application/json","text":"{\"tiddlers\":{\"$:/plugins/EvidentlyCube/Discloser/history\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/history\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"* ''0.0.1'' -- First version\"},\"$:/plugins/EvidentlyCube/Discloser/license\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/license\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"This plugin is licensed under the MIT license.\\n\\nCopyright 2022 Maurycy Zarzycki\\n\\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \\\"Software\\\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\\n\\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\\n\\nTHE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\"},\"$:/plugins/EvidentlyCube/Discloser/readme\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/readme\",\"tags\":\"\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\n[[Github|https://github.com/EvidentlyCube/TW5-Discloser]]\\n\\n----\\n\\nTODO\"},\"$:/plugins/EvidentlyCube/Discloser/cleanup.js\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/cleanup.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/EvidentlyCube/Discloser/cleanup.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nCleans up dangling links when a collection is deleted\\n\\\\*/\\n\\n(function(){\\n\\n/*jslint node: false, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Export name and synchronous status\\nexports.name = \\\"evidentlycube-discloser-cleanup\\\";\\nexports.after = [\\\"windows\\\"];\\nexports.synchronous = true;\\n\\nexports.startup = function() {\\n\\tif ($tw.node) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Avoid risking infinite loops and stuff\\n\\tvar isBusy = false;\\n\\n\\t$tw.hooks.addHook(\\\"th-deleting-tiddler\\\", function(tiddler) {\\n\\t\\tif (\\n\\t\\t\\tisBusy\\n\\t\\t\\t|| !tiddler // Sanity check\\n\\t\\t\\t|| tiddler.fields.tags.indexOf('$:/discloser/Collection') === -1 // Make sure we're deleting a collection\\n\\t\\t) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tisBusy = true;\\n\\n\\t\\tvar deletedCollectionTitle = tiddler.fields.title;\\n\\n\\t\\t// Rename tiddler names in Discloser collections\\n\\t\\tvar links =  $tw.wiki.filterTiddlers(\\\"[all[tiddlers]tag[$:/discloser/Link]]\\\");\\n\\t\\tfor (let i = 0; i < links.length; i++) {\\n\\t\\t\\tvar linkTiddler = $tw.wiki.getTiddler(links[i]);\\n\\n\\t\\t\\tif (linkTiddler.fields.collection === deletedCollectionTitle) {\\n\\t\\t\\t\\t$tw.wiki.deleteTiddler(linkTiddler.fields.title);\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tisBusy = false;\\n\\t});\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/EvidentlyCube/Discloser/index.js\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/index.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/EvidentlyCube/Discloser/index.js\\ntype: application/javascript\\nmodule-type: indexer\\n\\n\\\\*/\\n\\n(function () {\\n\\n    /*jslint node: true, browser: true */\\n    /*global modules: false */\\n    \\\"use strict\\\";\\n\\n    if ($tw.node) {\\n\\t\\treturn;\\n\\t}\\n\\n    function DiscloserIndex(wiki) {\\n        this.wiki = wiki;\\n    }\\n\\n    DiscloserIndex.prototype.init = function () {\\n        this.index = null;\\n\\n        this.tiddlerToLinksMap = new Map();\\n        this.touchedCollections = new Set();\\n    }\\n\\n    DiscloserIndex.prototype.rebuild = function () {\\n        var self = this;\\n        var links = $tw.wiki.getTiddlersWithTag(\\\"$:/discloser/Link\\\");\\n\\n        this.tiddlerToLinksMap.clear();\\n\\n        $tw.utils.each(links, function (title) {\\n            var tiddler = $tw.wiki.getTiddler(title);\\n            if (!tiddler || tiddler.isDraft() || !tiddler.fields.tiddler) {\\n                return;\\n            }\\n\\n            var links = self.tiddlerToLinksMap.get(tiddler.fields.tiddler) || [];\\n            links.push(title);\\n            self.tiddlerToLinksMap.set(tiddler.fields.tiddler, links);\\n        });\\n    }\\n\\n    DiscloserIndex.prototype.update = function (updateDescriptor) {\\n        const oldTiddler = updateDescriptor.old.tiddler;\\n        const newTiddler = updateDescriptor.new.tiddler;\\n\\n        var isOldLink = this.isValidLink(oldTiddler);\\n        var isNewLink = this.isValidLink(newTiddler);\\n        if (isOldLink && isNewLink) {\\n            if (\\n                oldTiddler.link !== newTiddler.link\\n                || oldTiddler.fields.collection !== newTiddler.fields.collection\\n            ) {\\n                this.linkRemove(oldTiddler);\\n                this.linkAdd(newTiddler);\\n            }\\n        } else if (isOldLink) {\\n            this.linkRemove(oldTiddler);\\n        } else if (isNewLink) {\\n            this.linkAdd(newTiddler);\\n        }\\n\\n        this.tryTouchingTiddler(oldTiddler);\\n        this.tryTouchingTiddler(newTiddler);\\n    };\\n\\n    DiscloserIndex.prototype.isValidLink = function(tiddler) {\\n        return tiddler\\n            // Must have appropriate link tag\\n            && tiddler.fields.tags\\n            && tiddler.fields.tags.indexOf('$:/discloser/Link') !== -1\\n            // And must link to something (even if this something doesn't exist, it may exist later)\\n            && tiddler.fields.tiddler;\\n    }\\n\\n    DiscloserIndex.prototype.linkRemove = function(tiddler) {\\n        const linkedTiddler = tiddler.fields.tiddler;\\n        const links = this.tiddlerToLinksMap.get(linkedTiddler) || [];\\n        this.fastRemoveFromArray(links, tiddler.fields.title);\\n\\n        if (links.length === 0) {\\n            this.tiddlerToLinksMap.delete(linkedTiddler);\\n        } else {\\n            this.tiddlerToLinksMap.set(linkedTiddler, links);\\n        }\\n\\n        if (tiddler.fields.collection) {\\n            this.touchedCollections.add(tiddler.fields.collection);\\n        }\\n    };\\n\\n    DiscloserIndex.prototype.linkAdd = function(tiddler) {\\n        const linkedTiddler = tiddler.fields.tiddler;\\n        const links = this.tiddlerToLinksMap.get(linkedTiddler) || [];\\n        links.push(tiddler.fields.title);\\n        this.tiddlerToLinksMap.set(linkedTiddler, links);\\n\\n        if (tiddler.fields.collection) {\\n            this.touchedCollections.add(tiddler.fields.collection);\\n        }\\n    };\\n\\n    DiscloserIndex.prototype.tryTouchingTiddler = function(tiddler) {\\n        if (!tiddler) {\\n            return;\\n        }\\n\\n        const links = this.tiddlerToLinksMap.get(tiddler.fields.title);\\n        if (links) {\\n            for (let i = 0; i < links.length; i++) {\\n                const linkTiddler = $tw.wiki.getTiddler(tiddler);\\n                if (linkTiddler && linkTiddler.fields.collection) {\\n                    this.touchedCollections.add(tiddler.fields.collection);\\n                }\\n            }\\n\\n            console.log(this.touchedCollections);\\n        }\\n    }\\n\\n    DiscloserIndex.prototype.fastRemoveFromArray = function(array, value) {\\n        const index = array.indexOf(value);\\n        if (index !== -1) {\\n            array[index] = array[array.length - 1];\\n            array.length--;\\n        }\\n    }\\n\\n    exports.DiscloserIndex = DiscloserIndex;\\n})();\",\"type\":\"application/javascript\",\"module-type\":\"indexer\"},\"$:/plugins/EvidentlyCube/Discloser/publish-hook-web.js\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/publish-hook-web.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/EvidentlyCube/Discloser/publish-hook-web.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nTracks for publish message and sends it to the backend.\\n\\n\\\\*/\\n\\n(function(){\\n\\n/*jslint node: false, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Export name and synchronous status\\nexports.name = \\\"evidentlycube-discloser-publish-hook-web\\\";\\nexports.after = [\\\"startup\\\"];\\nexports.synchronous = true;\\n\\nconst PENDING_REFRESH_TITLE = \\\"$:/plugins/EvidentlyCube/Discloser/pending-refresh\\\";\\n\\nexports.startup = function() {\\n\\tif ($tw.node) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t$tw.rootWidget.addEventListener('ec-discloser-publish', function() {\\n\\n\\t});\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/EvidentlyCube/Discloser/publish-tracker.js\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/publish-tracker.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/EvidentlyCube/Discloser/publish-tracker.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nTracks when collections need to be updated and stores\\ntheir list in $:/plugins/EvidentlyCube/Discloser/pending-refresh\\n\\\\*/\\n\\n(function(){\\n\\n/*jslint node: false, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Export name and synchronous status\\nexports.name = \\\"evidentlycube-discloser-publish-tracker\\\";\\nexports.before = [\\\"startup\\\"];\\nexports.synchronous = true;\\n\\nconst PENDING_REFRESH_TITLE = \\\"$:/plugins/EvidentlyCube/Discloser/pending-refresh\\\";\\n\\nexports.startup = function() {\\n\\tif ($tw.node) {\\n\\t\\treturn;\\n\\t}\\n\\n\\n\\tconst dirtyCollections = new Set();\\n\\n\\t$tw.wiki.addEventListener(\\\"change\\\", onChange);\\n\\t$tw.hooks.addHook(\\\"ec-discloser-publish\\\",function(parseTreeNodes,widget) {\\n\\t\\tconsole.log(arguments);\\n\\t});\\n\\n\\tloadStoredDirtyCollections();\\n\\n\\tfunction loadStoredDirtyCollections() {\\n\\t\\tconst tiddler = $tw.wiki.getTiddler(PENDING_REFRESH_TITLE);\\n\\t\\tif (tiddler && tiddler.fields.list) {\\n\\t\\t\\t$tw.utils.each(tiddler.fields.list, function(title) {\\n\\t\\t\\t\\tdirtyCollections.add(title);\\n\\t\\t\\t});\\n\\t\\t}\\n\\t}\\n\\n\\tfunction onChange() {\\n\\t\\tconst indexer = $tw.wiki.getIndexer('DiscloserIndex');\\n\\n\\t\\tif (indexer.touchedCollections.size > 0) {\\n\\t\\t\\tlet dirty = false;\\n\\t\\t\\tfor (const collectionTitle of indexer.touchedCollections) {\\n\\t\\t\\t\\tif (!dirtyCollections.has(collectionTitle)) {\\n\\t\\t\\t\\t\\tdirty = true;\\n\\t\\t\\t\\t\\tdirtyCollections.add(collectionTitle);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif (dirty) {\\n\\t\\t\\t\\tstoreDirtyCollections();\\n\\t\\t\\t}\\n\\n\\t\\t\\tindexer.touchedCollections.clear();\\n\\t\\t}\\n\\t}\\n\\n\\tfunction storeDirtyCollections() {\\n\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler({\\n\\t\\t\\ttitle: PENDING_REFRESH_TITLE,\\n\\t\\t\\tlist: Array.from(dirtyCollections).join(\\\" \\\")\\n\\t\\t}));\\n\\t}\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/EvidentlyCube/Discloser/rename-hook.js\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/rename-hook.js\",\"text\":\"/*\\\\\\ntitle: $:/plugins/EvidentlyCube/Discloser/rename-hook.js\\ntype: application/javascript\\nmodule-type: startup\\n\\nEnsures renamed tiddlers will have their names updated in Discloser links\\n\\\\*/\\n\\n(function(){\\n\\n/*jslint node: false, browser: true */\\n/*global $tw: false */\\n\\\"use strict\\\";\\n\\n// Export name and synchronous status\\nexports.name = \\\"evidentlycube-discloser-rename-hook\\\";\\nexports.after = [\\\"windows\\\"];\\nexports.synchronous = true;\\n\\nexports.startup = function() {\\n\\tif ($tw.node) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Avoid risking infinite loops and stuff\\n\\tvar isBusy = false;\\n\\n\\t$tw.hooks.addHook(\\\"th-saving-tiddler\\\", function(newTiddler, oldTiddler) {\\n\\t\\tif (\\n\\t\\t\\tisBusy\\n\\t\\t\\t|| !oldTiddler // Not a rename\\n\\t\\t\\t|| !newTiddler // Redundant but let's keep it\\n\\t\\t\\t|| !oldTiddler.fields['draft.of'] // Was not a draft originally\\n\\t\\t\\t|| newTiddler.fields['draft.of'] // Sanity check\\n\\t\\t\\t|| newTiddler.fields['title'] === oldTiddler.fields['draft.of'] // Not a rename\\n\\t\\t) {\\n\\t\\t\\treturn newTiddler;\\n\\t\\t}\\n\\n\\t\\tisBusy = true;\\n\\n\\t\\tvar newTitle = newTiddler.fields.title;\\n\\t\\tvar oldTitle = oldTiddler.fields['draft.of'];\\n\\n\\t\\t// Rename tiddler names in Discloser collections\\n\\t\\tvar links =  $tw.wiki.filterTiddlers(\\\"[all[tiddlers]tag[$:/discloser/Link]]\\\");\\n\\t\\tfor (let i = 0; i < links.length; i++) {\\n\\t\\t\\tvar linkTiddler = $tw.wiki.getTiddler(links[i]);\\n\\n\\t\\t\\tif (linkTiddler.fields.tiddler === oldTitle) {\\n\\t\\t\\t\\t$tw.wiki.addTiddler(new $tw.Tiddler(linkTiddler, {tiddler: newTitle}));\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tisBusy = false;\\n\\n\\t\\treturn newTiddler;\\n\\t});\\n};\\n\\n})();\\n\",\"type\":\"application/javascript\",\"module-type\":\"startup\"},\"$:/plugins/EvidentlyCube/Discloser/ui-macro\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/ui-macro\",\"type\":\"text/vnd.tiddlywiki\",\"tags\":\"$:/tags/Macro\",\"text\":\"\\r\\n\\\\define action-create-collection()\\r\\n\\t<$let\\r\\n\\t\\tnow=<<now \\\"DDmmmYYYYhhmmssXXX\\\">>\\r\\n\\t\\tid={{{ [<now>] [all[tiddlers]] [variables[]] +[join[]sha256[32]] }}}\\r\\n\\t\\tname={{$:/temp/discloser!!collection-name}}\\r\\n\\t\\tbasename={{{ [[$:/discloser/Collection-]addsuffix<id>] }}}\\r\\n\\t>\\r\\n\\t\\t<$action-createtiddler\\r\\n\\t\\t\\t$basetitle=<<basename>>\\r\\n\\t\\t\\ttags=\\\"$:/discloser/Collection\\\"\\r\\n\\t\\t\\tname=<<name>>\\r\\n\\t\\t\\tcaption={{{ [<name>addsuffix[ (Discloser Collection)]] }}}\\r\\n\\t\\t\\tid=<<id>>\\r\\n\\t\\t/>\\r\\n\\t\\t<$action-setfield $tiddler=\\\"$:/temp/discloser\\\" $field=\\\"collection-name\\\"/>\\r\\n\\t</$let>\\r\\n\\\\end\\n\\n\\\\define action-link-tiddler()\\r\\n<$let\\r\\n\\tnow=<<now \\\"DDmmmYYYYhhmmssXXX\\\">>\\r\\n\\tid={{{ [<now>] [all[tiddlers]] [variables[]] +[join[]sha256[32]] }}}\\r\\n\\tlink-title={{{ [[$:/discloser/Link-]addsuffix<id>] }}}\\r\\n>\\r\\n\\t<$action-createtiddler\\r\\n\\t\\t$basetitle=<<link-title>>\\r\\n\\t\\ttags=\\\"$:/discloser/Link\\\"\\r\\n\\t\\tcollection=<<currentTiddler>>\\r\\n\\t\\ttiddler=<<item>>\\r\\n\\t/>\\r\\n\\t<$action-setfield $tiddler=<<search-temp>> $field=\\\"text\\\" />\\r\\n\\t<$action-setfield $tiddler=<<focus-temp>> $field=\\\"text\\\" />\\r\\n</$let>\\r\\n\\\\end\\n\\n\\\\define action-remove-link()\\r\\n\\t<$list filter=\\\"[all[tiddlers]tag[$:/discloser/Link]field:tiddler<item>field:collection<currentTiddler>]\\\">\\r\\n\\t\\t<$action-deletetiddler $tiddler=<<currentTiddler>>/>\\r\\n\\t</$list>\\r\\n\\\\end\\n\\n\\\\define comp-search()\\r\\n\\t<$let\\r\\n\\t\\tsearch-temp={{{ [[$:/temp/publish/new-search-]addsuffix{!!id}] }}}\\r\\n\\t\\tfocus-temp={{{ [[$:/temp/publish/new-focus-]addsuffix{!!id}] }}}\\r\\n\\t>\\r\\n\\t\\t<$edit-text\\r\\n\\t\\t\\ttiddler=<<search-temp>>\\r\\n\\t\\t\\tfield=\\\"text\\\"\\r\\n\\t\\t\\ttag=\\\"input\\\"\\r\\n\\t\\t\\tdefault=\\\"\\\"\\r\\n\\t\\t\\tplaceholder=\\\"Search tiddler to add...\\\"\\r\\n\\t\\t\\tclass=\\\"subtle tc-popup-handle\\\"\\r\\n\\t\\t\\tfocusPopup=<<focus-temp>>\\r\\n\\t\\t/>\\n\\n\\t\\t<$reveal tag=\\\"div\\\" class=\\\"tc-block-dropdown tc-edit-type-dropdown\\\" state=<<focus-temp>> type=\\\"nomatch\\\" text=\\\"\\\" default=\\\"\\\">\\r\\n\\t\\t\\t<div class=\\\"tc-dropdown-item\\\">Tiddlers:</div>\\r\\n\\t\\t\\t<$set name=\\\"search\\\" value={{{ [<search-temp>get[text]] }}}>\\r\\n\\t\\t\\t\\t<$list filter=\\\"[!is[shadow]!is[system]!is[draft]search:title<search>sort[]limit[8]]\\\" variable=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t<$button tag=\\\"a\\\" actions=<<action-link-tiddler>> class=\\\"tc-btn-invisible\\\">\\r\\n\\t\\t\\t\\t\\t\\t<$text text=<<item>>/>\\r\\n\\t\\t\\t\\t\\t</$button>\\r\\n\\t\\t\\t\\t</$list>\\r\\n\\t\\t\\t</$set>\\r\\n\\t\\t</$reveal>\\r\\n\\t</$let>\\r\\n\\\\end\\n\\n\\\\define discloser-ui()\\r\\n\\\\whitespace trim\\n\\n<$list filter=\\\"[tag[$:/discloser/Collection]!is[draft]]\\\" emptyMessage=\\\"\\\"\\\"<span class=\\\"ec_d-muted\\\">No collections published yet</span>\\\"\\\"\\\">\\r\\n<div class=\\\"ec_d-collection\\\">\\r\\n\\t<h1>\\r\\n\\t\\t{{!!name}}\\r\\n\\t\\t<$link to=<<currentTiddler>> class=\\\"ec_d-underless\\\">🔗</$link>\\r\\n\\t</h1>\\r\\n\\t<span class=\\\"ec_d-muted\\\" title=\\\"ID of this collection\\\">({{!!id}})</span>\\n\\n\\t<h2>Published tiddlers:</h2>\\r\\n\\t<ul>\\r\\n\\t\\t<$list filter=\\\"[all[tiddlers]tag[$:/discloser/Link]field:collection<currentTiddler>!is[draft]get[tiddler]]\\\" variable=\\\"item\\\">\\r\\n\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t<$link to=<<item>>><$text text=<<item>>/></$link> <span class=\\\"ec_d-muted\\\"></span>\\r\\n\\t\\t\\t\\t<$button actions=<<action-remove-link>> class=\\\"tc-btn-invisible\\\">🗙</$button>\\r\\n\\t\\t\\t</li>\\r\\n\\t\\t</$list>\\r\\n\\t</ul>\\n\\n\\t<h2>Related tiddlers:</h2>\\r\\n\\t<ul>\\r\\n\\t\\t<$set name=\\\"existing-items\\\" filter=\\\"[all[tiddlers]tag[$:/discloser/Link]field:collection<currentTiddler>get[tiddler]]\\\">\\r\\n\\t\\t\\t<$list filter=\\\"[enlist<existing-items>]\\\" variable=\\\"existing-item\\\">\\r\\n\\t\\t\\t\\t<$list filter=\\\"[all[tiddlers]field:parent<existing-item>] [<existing-item>links[]] -[enlist<existing-items>] +[!is[draft]!is[shadow]!is[system]]\\\" variable=\\\"item\\\">\\r\\n\\t\\t\\t\\t\\t<li>\\r\\n\\t\\t\\t\\t\\t\\t<$button actions=<<action-link-tiddler>> class=\\\"tc-btn-invisible\\\">➕</$button>\\r\\n\\t\\t\\t\\t\\t\\t<$link to=<<item>>><$text text=<<item>>/></$link>\\r\\n\\t\\t\\t\\t\\t</li>\\r\\n\\t\\t\\t\\t</$list>\\r\\n\\t\\t\\t</$list>\\r\\n\\t\\t</$set>\\r\\n\\t</ul>\\n\\n\\t<<comp-search>>\\r\\n</div>\\r\\n</$list>\\n\\n----\\n\\n<$keyboard actions=<<action-create-collection>> key=\\\"enter\\\">\\n\\n!! Share a new collection: <$edit-text tag=\\\"input\\\" tiddler=\\\"$:/temp/discloser\\\" field=\\\"collection-name\\\" placeholder=\\\"Collection name\\\"/>\\r\\n</$keyboard>\\r\\n\\\\end\"},\"$:/plugins/EvidentlyCube/Discloser/sidebar-status\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/sidebar-status\",\"tags\":\"$:/tags/SideBarSegment\",\"list-after\":\"$:/core/ui/SideBarSegments/site-subtitle\",\"text\":\"\\\\whitespace trim\\r\\n<div class=\\\"tc-site-subtitle\\\">\\r\\n''Discloser status:''&nbsp; <$list filter=\\\"[list[$:/plugins/EvidentlyCube/Discloser/pending-refresh]count[]]\\\" emptyMessage=\\\"0\\\">\\r\\n&nbsp;<$text text=<<currentTiddler>>/>&nbsp;\\r\\n<$button>\\r\\n<$action-sendmessage $message=\\\"ec-discloser-publish\\\"/>\\r\\nPublish\\r\\n</$button>\\r\\n</$list>\\r\\n</div>\\r\\n\"},\"$:/plugins/EvidentlyCube/Discloser/Style\":{\"title\":\"$:/plugins/EvidentlyCube/Discloser/Style\",\"tags\":\"$:/tags/Stylesheet\",\"type\":\"text/vnd.tiddlywiki\",\"text\":\"\\r\\n.ec_d-collection {\\r\\n\\tborder: 1px solid #888;\\r\\n\\tborder-radius: 1em;\\r\\n\\tbackground: #F8F8F8;\\r\\n\\tpadding: 1em;\\r\\n}\\r\\n.ec_d-collection h1{\\r\\n\\tmargin: 0;\\r\\n}\\r\\n.ec_d-muted {\\r\\n    color: #888;\\r\\n    font-style: italic;\\r\\n}\\r\\n.ec_d-underless {\\r\\n\\ttext-decoration: none !important;\\r\\n}\"}}}"}